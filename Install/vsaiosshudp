#!/bin/bash

# ##########################################################
# Script de InstalaÃ§Ã£o do BadVPN - UDP Gateway
# Autor: @fermandoangeli 
# GitHub: @vsaiossh
# Telegram: @vsaiossh
# Cientista de dados e Bacharelado em Tecnologia da InformaÃ§Ã£o pela Universidade de Harvard
# ##########################################################

# FunÃ§Ã£o para exibir mensagens de erro e sair do script
function erro {
    echo -e "\n\033[31mErro:\033[0m $1"
    exit 1
}

# FunÃ§Ã£o de loading com ðŸ’šðŸ’› em loop
function loading {
    local PID=$1
    local INTERVAL=0.2
    local MAX_SIMBOLOS=9
    local ICONES=("ðŸ’š" "ðŸ’›")
    local INDEX=0
    local PROGRESSO=""

    tput civis  # Esconde o cursor

    while kill -0 $PID 2>/dev/null; do
        PROGRESSO+="${ICONES[INDEX]}"
        INDEX=$(( (INDEX + 1) % 2 ))  # Alterna entre ðŸ’š e ðŸ’›

        if [[ ${#PROGRESSO} -gt $MAX_SIMBOLOS ]]; then
            PROGRESSO=""
            echo -ne "\r\033[2K"  # Limpa a linha antes de reiniciar
        fi

        echo -ne "\033[32m$PROGRESSO\r\033[0m"
        sleep $INTERVAL
    done

    tput cnorm  # Restaura o cursor
}

# FunÃ§Ã£o para verificar a arquitetura do sistema
function verificar_arquitetura {
    ARCH=$(uname -m)
    case $ARCH in
        x86_64|aarch64)
            BADVPN_REPO="https://github.com/ambrop72/badvpn.git"
            ;;
        *)
            erro "Arquitetura nÃ£o suportada: $ARCH"
            ;;
    esac
}

# 1. Atualizando os repositÃ³rios e instalando as dependÃªncias necessÃ¡rias.
(sudo apt update && sudo apt install -y build-essential cmake git) &> /dev/null &
loading $!

# 2. Verificando a arquitetura do sistema e configurando o repositÃ³rio apropriado.
verificar_arquitetura

# 3. Baixando o cÃ³digo-fonte do BadVPN do repositÃ³rio adequado.
(git clone $BADVPN_REPO && cd badvpn) &> /dev/null || erro "Falha ao clonar o repositÃ³rio BadVPN."
cd badvpn

# 4. Configurando a compilaÃ§Ã£o para incluir o UDP Gateway.
(cmake -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_NOTHING_BY_DEFAULT=1 -DBUILD_UDPGW=1 .) &> /dev/null &
loading $!

# 5. Compilando o programa.
(make -j$(nproc)) &> /dev/null &
loading $!

# 6. Instalando o binÃ¡rio compilado.
(sudo make install) &> /dev/null &
loading $!

# Mensagem final de sucesso
echo -e "\033[32mGateway UDP instalado com sucesso! ðŸ‡§ðŸ‡·\033[0m"
echo -e "\033[32mSe estiver utilizando o VSAIO MANAGER:\033[0m"
echo -e "\033[32mDigite menu e ative nas configuraÃ§Ãµes do menu...\033[0m"
# Removendo arquivos desnecessÃ¡rios
rm -rf ~/badvpn
rm -rf $HOME/vsaiosshudp && cat /dev/null > ~/.bash_history && history -c